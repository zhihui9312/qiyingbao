<template>
  <view class="container">
    <swiper class="swiper" indicator-active-color="{{indicatorActiveColor}}" indicator-dots="{{indicatorDots}}" autoplay="{{autoplay}}" interval="{{interval}}" duration="{{duration}}" circular="true">
      <block wx:for="{{adList}}" wx:key="key">
        <swiper-item>
          <image src="{{item}}" class="slide-image"/>
        </swiper-item>
      </block>
    </swiper>
    <!--发现好商品模块-->
    <discover :list.sync="discoverList"></discover>
    <!--加载更多时动画-->
    <bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>
    <!--暂无数据显示-->
    <placeholder :show.sync="is_empty" message="暂无发现数据"></placeholder>
    <!--弹屏  types:0 图片  1：领红包   show 是否显示  @close 关闭回调  @callback 点击图片回调 或确定回调-->

    <bombscreen :types.sync="tps" :show.sync="is_show_alert" @close.user="closeAlert" @callback.user="alertCallback"></bombscreen>

    <navigator style="position: fixed;right: 10px;bottom: 10px;border-radius: 70px;width: 70px;height: 70px;" url="/pages/copperation_add">
      <image style="width: 70px;height: 70px;" src="../images/icon_publish.png"></image>

    </navigator>

  </view>
</template>
<script>
  import wepy from 'wepy';
  import api from '@/api/api';
  import tip from '@/utils/tip'
  import Discover from '@/components/discover'
  import Bombscreen from '@/components/bomb_screen'
  import BottomLoadMore from "../components/common/bottomLoadMore"
  import Placeholder from "../components/common/placeholder"

  export default class Home extends wepy.page {
    config = {
      navigationBarTitleText: '企营宝',
    }
    components = {
      discover: Discover,
      bottomLoadMore: BottomLoadMore,
      placeholder: Placeholder,
      bombscreen: Bombscreen
    }
    data = {
      indicatorDots: true,
      autoplay: true,
      interval: 3000,
      duration: 1000,
      indicatorActiveColor: "#fff",
      discoverList: [],
      //是否有数据
      is_empty: false,
      //当前页面
      currentPage: 1,
      //总页数
      page_total: 0,
      //是否显示 底部loading
      showLoading: true,
      //防止重复加载
      preventRepeatReuqest: false,
      //广告列表
      adList: [],
      tps: 0,
      is_show_alert: false
    }

    async getDiscoverList(currentPage, size) {
      let that = this;
      const json = await api.getCooperationList({
        query: {
          pageNo: currentPage || 1,
          pageSize: size || 10
        }
      });
      console.log(json)
      if (json.data.code == 200) {
        that.discoverList = [...that.discoverList, ...json.data.data.list];
        if (json.data.page_total) { // 后台的数据不再返回page_total
          that.page_total = json.data.data.count;
        }
        if (json.data.page_total == 0) {
          //暂无数据
          that.is_empty = true;
        }

      } else {
        tip.error(json.data.msg);
      }
      that.showLoading = false;
      that.$apply();
    }

    async getAdList() {
      const json = await api.getAdver({
        query: {}
      });
      console.log(json);
      if (json.data.code == 200) {

        var array=json.data.data;
        var arrays=[];
         console.log(array);

        for (var i = 0, len = array.length; i < len; i++) {
          console.log(array[i].photo)
          arrays.push(api.host+array[i].photo);
        }
        console.log(arrays);
        this.adList =arrays;
        this.$apply();
      } else {
      }
    }

    onLoad() {
      let that = this;
      that.discoverList = [];
      that.getDiscoverList();
      that.getAdList();
    }
    computed = {}
    methods = {
      goToAdvert(url) {
        console.log("url===" + url);
        if (url.length == 0) {
          return;
        }
        wepy.navigateTo({
          url: url
        })
      },
      onShareAppMessage: function (res) {
        if (res.from === 'button') {
          // 来自页面内转发按钮
          console.log(res.target)
        }
        return {
          title: '素洁服装厂',
          path: '/pages/home',
          success: function (res) {
            // 转发成功
          },
          fail: function (res) {
            // 转发失败
          }
        }
      },
      alertCallback() {
        tip.alert('跳转');
      },
      closeAlert() {
        // tip.alert('关闭');
      }
    }
    events = {}

    //加载更多
    onReachBottom() {
      let that = this;
      that.showLoading = true;
      console.log("ddd")
      console.log(that.page_total + "===" + that.currentPage);
      //判断总页数是否大于翻页数
      if ((that.page_total) > that.currentPage) {
        //防止重复加载
        if (that.preventRepeatReuqest) {
          return true;
        }
        that.preventRepeatReuqest = true;
        ++that.currentPage;
        that.getDiscoverList(that.currentPage - 1);
        that.preventRepeatReuqest = false;
      } else {
        that.showLoading = false;
      }
    };
  }

</script>
<style lang="less">
  .swiper {
    height: 348 rpx;
  }

  .slide-image {
    width: 100%;
    height: 100%;
    mode:aspectFit;

  }

  .pos {
    position: absolute;
    top: 0 rpx;
    left: 0;
    right: 0;
    .search_content {
      background: rgba(0, 0, 0, 0.1);
      border: 1px solid #efefee;
      .icon-search,
      .search_input {
        color: #efefee;
      }
    }
    .message {
      display: block;
      text-align: center;
      margin-left: 20 rpx;
    }
    .doc {
      font-size: 16 rpx;
      display: block;
    }
  }

  .nav_list {
    color: #404040;
    display: flex;
    font-size: 26 rpx;
    justify-content: space-between;
    padding: 17 rpx 50 rpx;
    navigator {
      text-align: center
    }
    .nav_icon {
      height: 80 rpx;
      margin: 0 auto;
      width: 80 rpx;
      margin-bottom: 14 rpx;
    }
    .nav_text {
      font-size: 26 rpx
    }
  }

  .recommend-title {
    padding: 40 rpx 0;
    text-align: center;
    color: #333;
  }

</style>
