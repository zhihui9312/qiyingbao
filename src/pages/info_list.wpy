<template>
  <view >

    <discover :list.sync="discoverList"></discover>
    <!--加载更多时动画-->
    <bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>
    <!--暂无数据显示-->
    <placeholder :show.sync="is_empty" message="暂无发现数据"></placeholder>

  </view>
</template>
<script>
  import wepy from 'wepy';
  import api from '@/api/api';
  import tip from '@/utils/tip';
  import Discover from '@/components/discover';
  import BottomLoadMore from "../components/common/bottomLoadMore";
  import Placeholder from "../components/common/placeholder";
  import {QYB_INFO} from '@/utils/constant';

  export default class Home extends wepy.page {
    config = {
      navigationBarTitleText: '我的发布',
    }
    components = {
      discover: Discover,
      bottomLoadMore: BottomLoadMore,
      placeholder: Placeholder
    }
    data = {
      indicatorDots: true,
      autoplay: true,
      interval: 3000,
      duration: 1000,
      indicatorActiveColor: "#fff",
      discoverList: [],
      //是否有数据
      is_empty: false,
      //当前页面
      currentPage: 1,
      //总页数
      page_total: 0,
      //是否显示 底部loading
      showLoading: true,
      //防止重复加载
      preventRepeatReuqest: false,
      //广告列表
      adList: [],
      tps: 0,
      is_show_alert: false,
      type:0
    }

    async getDiscoverList(currentPage, userId,size) {
      let that = this;
      const json = await api.getCooperationList({
        query: {
          pageNo: currentPage || 1,
          pageSize: size || 10,
          userId:userId
        }
      });
      console.log(json);
      if (json.data.code == 200&&json.data.data.count > 0) {
        that.discoverList = [...that.discoverList, ...json.data.data.list];
        that.page_total = json.data.count;
        console.log(json.data);
      }
      if (json.data.data.count == 0) {
        //暂无数据
        that.is_empty = true;
      }
      that.showLoading = false;
      that.$apply();
    }

    onLoad() {
      let userInfo = wepy.getStorageSync(QYB_INFO);
      this.getDiscoverList(1,userInfo.id);
    }

    //加载更多
    onReachBottom(){
      let that = this;
      that.showLoading = true;
      console.log("ddd")
      console.log(that.page_total + "===" + that.currentPage);
      //判断总页数是否大于翻页数
      if ((that.page_total) > that.currentPage) {
        //防止重复加载
        if (that.preventRepeatReuqest) {
          return true;
        }
        that.preventRepeatReuqest = true;
        ++that.currentPage;
        that.getDiscoverList(that.currentPage);
        that.preventRepeatReuqest = false;
      } else {
        that.showLoading = false;
      }
    }
  }

</script>
<style lang="less">
  .swiper {
    height: 348rpx;
  }

  .slide-image {
    width: 100%;
    height: 100%;
    mode: aspectFit;

  }

  .home-icon {
    width: 130rpx;
    height: 130rpx;
    margin-left: 40rpx;
    float: left;
  }
  .home-title{
    width: 130rpx;
    height: 130rpx;
    margin-left: 40rpx;
    text-align: center;
    line-height: 200rpx;
    float: left;
    font-size: 12px;
  }

  .pos {
    position: absolute;
    top: 0rpx;
    left: 0;
    right: 0;
    .search_content {
      background: rgba(0, 0, 0, 0.1);
      border: 1px solid #efefee;
      .icon-search,
      .search_input {
        color: #efefee;
      }
    }
    .message {
      display: block;
      text-align: center;
      margin-left: 20rpx;
    }
    .doc {
      font-size: 16rpx;
      display: block;
    }
  }

  .nav_list {
    color: #404040;
    display: flex;
    font-size: 26rpx;
    justify-content: space-between;
    padding: 17rpx 50rpx;
    navigator {
      text-align: center
    }
    .nav_icon {
      height: 80rpx;
      margin: 0 auto;
      width: 80rpx;
      margin-bottom: 14rpx;
    }
    .nav_text {
      font-size: 26rpx
    }
  }

  .recommend-title {
    padding: 40rpx 0;
    text-align: center;
    color: #333;
  }

</style>
